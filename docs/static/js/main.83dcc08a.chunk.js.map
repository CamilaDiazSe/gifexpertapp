{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","element","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAuDaA,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,QC/ChBG,MAXf,YAAqC,EAAfC,GAAgB,IAAbC,EAAY,EAAZA,MAAMC,EAAM,EAANA,IAC3B,OACI,mCACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,4BAAIA,U,uBCLPK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAY,IAAD,EAC9B,MAAO,CACHhB,GAAIgB,EAAQhB,GACZC,MAAOe,EAAQf,MACfC,IAAG,UAAEc,EAAQC,cAAV,aAAE,EAAgBC,iBAAiBhB,QAV3B,kBAcZY,GAdY,4CAAH,sDCuCLK,EAtCO,SAACZ,GACnB,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkCA,OAjBAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGvB,CAACb,IASIc,GC/BEK,EAAU,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAUrB,EAA8BY,EAAaZ,GAA/BU,EAAZ,EAAOJ,KAAYO,EAAnB,EAAmBA,QAgBnB,OACI,qCACI,6BAAMb,IAELa,GAAW,4CACZ,oBAAIjB,UAAU,oBAAd,SAcQc,EAAOF,KAAI,SAACY,GAAD,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAI3B,aC4DjC4B,EAAe,WACxB,IAEA,EAAgC1C,mBAFb,CAAC,YAAa,aAAa,iBAE9C,mBAAOqB,EAAP,KAAiBtB,EAAjB,KAMA,OACI,qCACI,4CACA,uBACA,cAAC,EAAD,CAAaA,YAAaA,IAE1B,6BAEQsB,EAASQ,KAAI,SAACR,GAAD,OACL,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MC3HrCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83dcc08a.chunk.js","sourcesContent":["/*====================SIN FORMULARIO =============*/\r\n// import React, {useState} from 'react';\r\n\r\n// export const AddCategory = () =>{\r\n//     const titulo = \"AddCategory\";\r\n//     const [saludo, setSaludo] = useState(\"Hola hola\");\r\n\r\n//     const handleInputChange = (e) => {\r\n//         // setSaludo(e.target.value);\r\n//         console.log(e.target.value);\r\n//     }\r\n\r\n//     return(\r\n//         // <h2>{titulo}</h2>\r\n//         <input\r\n//             type=\"text\"\r\n//             name=\"categoria\"\r\n//             value={saludo}\r\n//             onChange={handleInputChange} \r\n//         />\r\n//     );\r\n// }\r\n\r\n/*============= CON FORMULARIO ===========*/\r\n// import React, { useState } from 'react';\r\n\r\n// export const AddCategory = () =>{\r\n    \r\n//     const [inputValue, setInputValue] = useState(\"Valor\");\r\n\r\n//     const handleInputChange = (e) =>{\r\n//         setInputValue(e.target.value);\r\n//     }\r\n\r\n//     const handleSubmit = (e)=>{\r\n//         e.preventDefault();\r\n//         console.log('submit false');\r\n//     }\r\n    \r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 value={inputValue}\r\n//                 onChange={handleInputChange}\r\n//             />\r\n//         </form>\r\n//     );\r\n// }\r\n\r\n/*======= CONEXIÓN CON GIFEXPERTAPP =========*/\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategory})=>{\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    \r\n    const handleInputValue = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategory(cats => [inputValue, ...cats]);\r\n            setInputValue(\"\");\r\n        }\r\n        \r\n    }\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategory: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nfunction GifGridItem({id,title,url}) {\r\n    return (\r\n        <>\r\n            <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\r\n                <img src={ url } alt={title} />\r\n                <p>{title}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","\r\n\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=8bbqBKgzDIMLe8jgjl66pcFPmUCRRuEY`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    \r\n    const gifs = data.map( element => {\r\n        return {\r\n            id: element.id,\r\n            title: element.title,\r\n            url: element.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n    // data.forEach((element) => {\r\n    //     console.log(element.images);\r\n    // })\r\n\r\n} ","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\nconst  useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //         .then(imgs => {\r\n    //             setTimeout(()=>{\r\n    //                 setState({\r\n    //                     data: imgs,\r\n    //                     loading: false,\r\n    //                 })\r\n    //             },3000);\r\n    //         })\r\n    // },[category]);\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n            })\r\n    },[category]);\r\n\r\n    // setTimeout(()=>{\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6],\r\n    //         loading: false\r\n    //     });\r\n    // }, 3000);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React, {useEffect, useState} from 'react';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n// import { getGifs } from '../helpers/getGif';\r\n\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category})=>{\r\n    /*Traer el Custom Hook*/\r\n    // const state = useFetchGifs();\r\n    // console.log(state);\r\n\r\n    // const {data, loading} = useFetchGifs();\r\n\r\n    // console.log(data);\r\n    // console.log(loading);\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //         .then((gifs)=>{ setImages(gifs)});\r\n    // },[category]);\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //         .then(setImages);\r\n    // },[category]);\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // getGifs();\r\n\r\n    return(\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {/* {loading ? 'Cargando...' : 'Data Cargada'} */}\r\n            {loading && <p>Cargando...</p> }\r\n            <ol className='mostrarCategorias'>\r\n                {\r\n                    // images.map(element =>(\r\n                    //     <li key={element.id}>{element.title}</li>\r\n                    //     )\r\n                    // )\r\n                    // images.map(({id,title}) =>(\r\n                    //     <li key={ id }>{ title }</li>\r\n                    //     )\r\n                    // )\r\n                    // images.map((img) =>(\r\n                    //     <GifGridItem key={img} img={img} />\r\n                    //     )\r\n                    // )\r\n                    images.map((img) =>(\r\n                        <GifGridItem key={img.id} {...img} />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}","/*=============== SALUDO ==============*/\r\n\r\n// import React from 'react';\r\n\r\n// const GifExpertApp = () => {\r\n//     const saludo = \"GifExpertApp\";\r\n//     return (\r\n//         <h1>Hola soy {saludo}</h1>\r\n//     );\r\n// };\r\n\r\n// export {\r\n//     GifExpertApp\r\n// }\r\n\r\n/*================ LISTA DE CATEGORIAS =============*/\r\n// import React from 'react';\r\n\r\n\r\n// export const GifExpertApp = () =>{\r\n//     const Categories = ['Dios', 'Jesus', 'Virgen Maria', 'Cruz Jesus'];\r\n//     const letrero = \"Dios Te Ama y mucho\";\r\n\r\n//     return(\r\n//         <>\r\n//             <h2>{ letrero }</h2>\r\n//             <hr/>\r\n//             <ol>\r\n//                 {\r\n//                     // Categories.map((category)=>{\r\n//                     //     return <li key={category} >{category}</li>;\r\n//                     // })\r\n\r\n//                     Categories.map((category)=><li key={category} >{category}</li>)\r\n//                 }\r\n//             </ol>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n/*========= LISTA DE CATEGORIAS CON ESTADO ==========*/\r\n\r\n// import React, {useState} from 'react';\r\n// import { AddCategory } from './components/AddCategory';\r\n\r\n\r\n// export const GifExpertApp = () => {\r\n//     const Categories = ['Dios', 'Jesus','Virgen Maria'];\r\n//     const titulo = \"Ha rezarle el rosario a María\";\r\n\r\n//     const [valorAgregar, setvalorAgregar] = useState(Categories);\r\n\r\n//     const handleAdd = () =>{\r\n//         setvalorAgregar([...valorAgregar, 'Rosario']);\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n//             <h2>{titulo}</h2>\r\n//             <AddCategory/>\r\n//             <hr/>\r\n//             <button onClick={handleAdd}>Agregar</button>\r\n//             <ol>\r\n//                 {\r\n//                     valorAgregar.map  ((category)=>{\r\n//                         return <li key={category}>{category}</li>\r\n//                     })\r\n//                 }\r\n//             </ol>\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n\r\n/*===== ENVIAR INFORMACIÓN A ADDCATEGORY =======*/\r\n// import React, { useState } from 'react';\r\n// import { AddCategory } from './components/AddCategory';\r\n\r\n\r\n// export const GifExpertApp = ()=>{\r\n//     const categories = ['Dios', 'Jesus','Virgen Maria'];\r\n    \r\n//     const [category, setCategory] = useState(categories);\r\n\r\n//     // const handleAdd = ()=>{\r\n//     //     setCategory([...category, \"rosario\"]);\r\n//     // }\r\n\r\n//     return(\r\n//         <>\r\n//             <h1>Categorias</h1>\r\n//             <hr/>\r\n//             <AddCategory setCategory={setCategory}/>\r\n//             {/* <button onClick={handleAdd}>Agregar</button> */}\r\n//             <ol>\r\n//                 {\r\n//                     category.map((category)=>{\r\n//                         return <li key={category} >{category}</li>\r\n//                     })\r\n//                 }\r\n//             </ol>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n/*======== UTILIZAR EL FETCH ================*/\r\n\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = ()=>{\r\n    const categories = ['Santisimo', 'Eucaristia','Virgen Maria'];\r\n    \r\n    const [category, setCategory] = useState(categories);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     setCategory([...category, \"rosario\"]);\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h1>Categorias</h1>\r\n            <hr/>\r\n            <AddCategory setCategory={setCategory}/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    category.map((category)=>(\r\n                            <GifGrid \r\n                                key={category}\r\n                                category={category} \r\n                            />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { GifGrid } from './components/GifGrid';\n// import { AddCategory } from './components/AddCategory';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<AddCategory/>, document.getElementById('root'));\n\n// ReactDOM.render(<GifGrid/>, document.getElementById(\"root\"));"],"sourceRoot":""}